{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nconst initialState = {\n  typeAuth: \"login\",\n  user: \"\",\n  request: \"\"\n};\nexport const fetchLogin = createAsyncThunk(\"Auth/fetchLogin\", async params => {\n  try {\n    console.log(params.data);\n    const {\n      data\n    } = await axios.get(\"/Auth\", {\n      body: \"\"\n    });\n    let datUser = data;\n    params.dispatch(setUserData(data));\n    return datUser;\n  } catch (error) {\n    initialState.request = error;\n  }\n});\nexport const fetchRegister = createAsyncThunk(\"Auth/fetchRegister\", async params => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/Auth\", params.data);\n    let dataRegist = data;\n    params.dispatch(changeRequestRegist(\"Ваш аккаунт успешно зарегистрирован\"));\n    return dataRegist;\n  } catch (error) {\n    params.dispatch(changeRequestRegist(error.response.data));\n    console.log(error.response.data);\n  }\n});\nexport const TypeAuthSlice = createSlice({\n  name: \"TypeAuth\",\n  initialState,\n  reducers: {\n    changeTypeAuth: (state, action) => {\n      state.typeAuth = action.payload;\n    },\n    changeRequestRegist: (state, action) => {\n      state.request = action.payload;\n    },\n    setUserData: (state, action) => {\n      state.user = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    // Get Answers\n    builder.addCase(fetchLogin.pending, state => {\n      state.UsersStatus = \"loading\";\n    });\n    builder.addCase(fetchLogin.fulfilled, (state, action) => {\n      state.Users = action.payload;\n      state.UsersStatus = \"loaded\";\n    });\n    builder.addCase(fetchLogin.rejected, state => {\n      state.UsersStatus = \"error\";\n    });\n  },\n  extraReducers: builder => {\n    // Get Answers\n    builder.addCase(fetchRegister.pending, state => {\n      state.UsersStatus = \"loading\";\n    });\n    builder.addCase(fetchRegister.fulfilled, (state, action) => {\n      // console.log(action)\n    });\n    builder.addCase(fetchRegister.rejected, state => {\n      state.UsersStatus = \"error\";\n    });\n  }\n});\nexport const {\n  changeTypeAuth,\n  changeRequestRegist,\n  setUserData\n} = TypeAuthSlice.actions;\nexport default TypeAuthSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","typeAuth","user","request","fetchLogin","params","console","log","data","get","body","datUser","dispatch","setUserData","error","fetchRegister","post","dataRegist","changeRequestRegist","response","TypeAuthSlice","name","reducers","changeTypeAuth","state","action","payload","extraReducers","builder","addCase","pending","UsersStatus","fulfilled","Users","rejected","actions","reducer"],"sources":["C:/Users/skydv/OneDrive/Desktop/Dating site/dating/front/src/redux/reducers/Auth.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\n\r\n\r\nconst initialState = {\r\n    typeAuth: \"login\",\r\n    user: \"\",\r\n    request: \"\"\r\n}\r\n\r\nexport const fetchLogin = createAsyncThunk(\"Auth/fetchLogin\", async (params) => {\r\n    try {\r\n        console.log(params.data)\r\n        const { data } = await axios.get(\"/Auth\", {body: \"\"})\r\n        let datUser = data\r\n        params.dispatch(setUserData(data))\r\n        return datUser\r\n    } catch (error) {\r\n        initialState.request = error\r\n    }\r\n})\r\n\r\nexport const fetchRegister = createAsyncThunk(\"Auth/fetchRegister\", async (params) => {\r\n    try {\r\n        const { data } = await axios.post(\"/Auth\", params.data)\r\n        let dataRegist = data\r\n        params.dispatch(changeRequestRegist(\"Ваш аккаунт успешно зарегистрирован\"))\r\n        return dataRegist\r\n    } catch (error) {\r\n        params.dispatch(changeRequestRegist(error.response.data))\r\n        console.log(error.response.data)\r\n    }\r\n})\r\n\r\nexport const TypeAuthSlice = createSlice({\r\n    name: \"TypeAuth\",\r\n    initialState,\r\n    reducers: {\r\n        changeTypeAuth: (state, action) => {\r\n            state.typeAuth = action.payload\r\n        },\r\n        changeRequestRegist: (state, action) => {\r\n            state.request = action.payload\r\n        },\r\n        setUserData: (state, action) => {\r\n            state.user = action.payload\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        // Get Answers\r\n        builder.addCase(fetchLogin.pending, (state) => {\r\n            state.UsersStatus = \"loading\";\r\n        })\r\n        builder.addCase(fetchLogin.fulfilled, (state, action) => {\r\n            state.Users = action.payload\r\n            state.UsersStatus = \"loaded\";\r\n        })\r\n        builder.addCase(fetchLogin.rejected, (state) => {\r\n            state.UsersStatus = \"error\";\r\n        })\r\n    },\r\n    extraReducers: builder => {\r\n        // Get Answers\r\n        builder.addCase(fetchRegister.pending, (state) => {\r\n            state.UsersStatus = \"loading\";\r\n        })\r\n        builder.addCase(fetchRegister.fulfilled, (state, action) => {\r\n            // console.log(action)\r\n        })\r\n        builder.addCase(fetchRegister.rejected, (state) => {\r\n            state.UsersStatus = \"error\";\r\n        })\r\n    }\r\n})\r\n\r\nexport const { changeTypeAuth, changeRequestRegist, setUserData } = TypeAuthSlice.actions\r\n\r\nexport default TypeAuthSlice.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}