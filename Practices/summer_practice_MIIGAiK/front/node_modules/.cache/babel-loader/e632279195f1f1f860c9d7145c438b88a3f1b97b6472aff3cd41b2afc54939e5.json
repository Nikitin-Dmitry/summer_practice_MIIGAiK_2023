{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nconst initialState = {\n  typeAuth: \"login\",\n  user: \"\",\n  request: \"\"\n};\nexport const fetchLogin = createAsyncThunk(\"Auth/fetchLogin\", async params => {\n  try {\n    console.log(params.data);\n    const {\n      data\n    } = await axios.post(`/Auth/Login`, params.data);\n    let dataUser = data;\n    params.dispatch(setUserData(dataUser));\n    if (dataUser != \"incorrect\") {\n      params.navigate(\"/Account\");\n    } else {}\n    console.log(dataUser);\n  } catch (error) {\n    initialState.request = error;\n  }\n});\nexport const fetchRegister = createAsyncThunk(\"Auth/fetchRegister\", async params => {\n  try {\n    console.log(params.data);\n    const {\n      data\n    } = await axios.post(\"/Auth/Regist\", params.data);\n    params.dispatch(changeRequestRegist(\"Ваш аккаунт успешно зарегистрирован\"));\n    params.navigate(\"/Login\");\n  } catch (error) {\n    params.dispatch(changeRequestRegist(error.response.data));\n    console.log(error.response.data);\n  }\n});\nexport const AuthSlice = createSlice({\n  name: \"Auth\",\n  initialState,\n  reducers: {\n    changeTypeAuth: (state, action) => {\n      state.typeAuth = action.payload;\n    },\n    changeRequestRegist: (state, action) => {\n      state.request = action.payload;\n    },\n    setUserData: (state, action) => {\n      console.log(action.payload);\n      state.user = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    // Get Answers\n    builder.addCase(fetchLogin.pending, state => {\n      state.UsersStatus = \"loading\";\n    });\n    builder.addCase(fetchLogin.fulfilled, (state, action) => {\n      // state.user = action.payload\n      state.UsersStatus = \"loaded\";\n    });\n    builder.addCase(fetchLogin.rejected, state => {\n      state.UsersStatus = \"error\";\n    });\n  },\n  extraReducers: builder => {\n    // Get Answers\n    builder.addCase(fetchRegister.pending, state => {\n      state.UsersStatus = \"loading\";\n    });\n    builder.addCase(fetchRegister.fulfilled, (state, action) => {\n      // console.log(action)\n    });\n    builder.addCase(fetchRegister.rejected, state => {\n      state.UsersStatus = \"error\";\n    });\n  }\n});\nexport const {\n  changeTypeAuth,\n  changeRequestRegist,\n  setUserData\n} = AuthSlice.actions;\nexport default AuthSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","typeAuth","user","request","fetchLogin","params","console","log","data","post","dataUser","dispatch","setUserData","navigate","error","fetchRegister","changeRequestRegist","response","AuthSlice","name","reducers","changeTypeAuth","state","action","payload","extraReducers","builder","addCase","pending","UsersStatus","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/skydv/OneDrive/Desktop/Dating site/dating/front/src/redux/reducers/Auth.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\n\r\n\r\nconst initialState = {\r\n    typeAuth: \"login\",\r\n    user: \"\",\r\n    request: \"\"\r\n}\r\n\r\nexport const fetchLogin = createAsyncThunk(\"Auth/fetchLogin\", async (params) => {\r\n    try {\r\n        console.log(params.data)\r\n        const { data } = await axios.post(`/Auth/Login`, params.data)\r\n        let dataUser = data\r\n        params.dispatch(setUserData(dataUser))\r\n        if (dataUser != \"incorrect\"){\r\n            params.navigate(\"/Account\")\r\n        } else {\r\n            \r\n        }\r\n        console.log(dataUser)\r\n    } catch (error) {\r\n        initialState.request = error\r\n    }\r\n})\r\n\r\nexport const fetchRegister = createAsyncThunk(\"Auth/fetchRegister\", async (params) => {\r\n    try {\r\n        console.log(params.data)\r\n        const { data } = await axios.post(\"/Auth/Regist\", params.data)\r\n        params.dispatch(changeRequestRegist(\"Ваш аккаунт успешно зарегистрирован\"))\r\n        params.navigate(\"/Login\")\r\n    } catch (error) {\r\n        params.dispatch(changeRequestRegist(error.response.data))\r\n        console.log(error.response.data)\r\n    }\r\n})\r\n\r\nexport const AuthSlice = createSlice({\r\n    name: \"Auth\",\r\n    initialState,\r\n    reducers: {\r\n        changeTypeAuth: (state, action) => {\r\n            state.typeAuth = action.payload\r\n        },\r\n        changeRequestRegist: (state, action) => {\r\n            state.request = action.payload\r\n        },\r\n        setUserData: (state, action) => {\r\n            console.log(action.payload)\r\n            state.user = action.payload\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        // Get Answers\r\n        builder.addCase(fetchLogin.pending, (state) => {\r\n            state.UsersStatus = \"loading\";\r\n        })\r\n        builder.addCase(fetchLogin.fulfilled, (state, action) => {\r\n            // state.user = action.payload\r\n            state.UsersStatus = \"loaded\";\r\n        })\r\n        builder.addCase(fetchLogin.rejected, (state) => {\r\n            state.UsersStatus = \"error\";\r\n        })\r\n    },\r\n    extraReducers: builder => {\r\n        // Get Answers\r\n        builder.addCase(fetchRegister.pending, (state) => {\r\n            state.UsersStatus = \"loading\";\r\n        })\r\n        builder.addCase(fetchRegister.fulfilled, (state, action) => {\r\n            // console.log(action)\r\n        })\r\n        builder.addCase(fetchRegister.rejected, (state) => {\r\n            state.UsersStatus = \"error\";\r\n        })\r\n    }\r\n})\r\n\r\nexport const { changeTypeAuth, changeRequestRegist, setUserData } = AuthSlice.actions\r\n\r\nexport default AuthSlice.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}